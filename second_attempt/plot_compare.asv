function plot_compare(name_array,N)
NBlades=3;
windvel = [10,0,0];
TSR=8;
Radius=50;
Omega = norm(windvel)*TSR/Radius;


for i=1:length(name_array)
    filename = "results_llt_N"+N+"a_"+name_array(i)+".mat";;
    temp = load(filename);
    results(:,:,i) = temp.results_a;
end

%%plotting
colors = ['r'; 'b'; 'g'; 'm'; 'k']; % define color scheme, more colors need to be added for larger analysis
styles = {'-', '--', '.-',':', '-','--'};
% change inflow angle from rad to degrees
results(:,9,:) = rad2deg(results(:,9,:));
% non-dimensionalize circulation - only for llt!
results(:,7,:) = results(:,7,:)/(pi*norm(windvel)^2/(NBlades*Omega));

%% a
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,2,i), 'linestyle',styles{i}, 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Axial induction')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% a'
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,3,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Tangential induction')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% alpha
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,8,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Angle of attack \alpha [\circ]')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% inflow
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,9,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Angle of inflow [\circ]')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% CT
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,4,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('C_T')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% CP
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,5,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('C_P')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% CQ
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,6,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('C_Q')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% CN

%% Circulation
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,7,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Circulation distribution (non-dimensionalized by \pi U_\infty^2 / \Omega N_{blades})')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% Fnorm
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,10,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Fnorm')
grid on
grid minor
xlabel('r/R')
legend show
hold off

%% Ftan
figure()
hold on
for i=1:length(name_array)
    plot(results(1:N,1,i), results(1:N,11,i), '-', 'Color', colors(i), 'DisplayName',sprintf('a = %.2f', name_array(i)))
end
title('Ftan')
grid on
grid minor
xlabel('r/R')
legend show
hold off
end